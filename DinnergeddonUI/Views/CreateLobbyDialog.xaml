<Window x:Class="DinnergeddonUI.Views.CreateLobbyDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DinnergeddonUI.Views"
        xmlns:helpers="clr-namespace:DinnergeddonUI.Helpers"
        mc:Ignorable="d"
        Title="CreateLobbyDialog" Height="546" Width="800"
        ResizeMode="NoResize"
        Background="{DynamicResource thisBackgroundColor}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <SolidColorBrush x:Key="thisBackgroundColor">#f7f2ed</SolidColorBrush>


    </Window.Resources>

    <DockPanel>

        <!--Create button panel-->
        <WrapPanel DockPanel.Dock="Bottom" HorizontalAlignment="Right">
            <Button    Command="{Binding CreateLobbyCommand}"  IsDefault="True"
              
                Content="Create"
                       Style="{StaticResource RoundButtonTemplate}"
                 FontSize="18"
                       Padding="30"
                       Margin="10" >
                <Button.CommandParameter>
                <MultiBinding Converter="{StaticResource CustomConverter}">
                        <Binding ElementName="PasswordTextBox"></Binding>
                        <Binding ElementName="ConfirmPasswordTextBox"></Binding>

                </MultiBinding>
                </Button.CommandParameter>
            </Button>
        </WrapPanel>

        <StackPanel  Margin="50,25,50,50">

            <Label Content="Create a lobby" HorizontalAlignment="Center" FontSize="23" Margin="0,0,0,40"></Label>

            <!--Lobby name field-->
            <Border
                Name="LobbyNameBorder"
            Margin="0,0,0,35"
                
            
            BorderThickness="0 0 0 1"
            >
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="{StaticResource InputFormColor}"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsValid}" Value="False">
                                <Setter Property="BorderBrush" Value="{StaticResource IncorrectColor}"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid Margin="5,0,0,3">
                    <TextBox Text="{Binding LobbyName}" x:Name="LobbyNameTextBox" FontSize="16" Foreground="Black" Background="{StaticResource thisBackgroundColor}"  BorderThickness="0"   TextWrapping="Wrap"  />
                    <TextBlock FontSize="16" Foreground="{StaticResource InputFormColor}" IsHitTestVisible="False" Text="Lobby name">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Opacity" Value="0.6"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=LobbyNameTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>

                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>

            <!--Select number of players-->
            <DockPanel Margin="0,0,0,35" >
                <Label FontSize="15" DockPanel.Dock="Left" Content="Number of players:"></Label>
                <WrapPanel  DockPanel.Dock="Right"  HorizontalAlignment="Right">

                    <RadioButton GroupName="Mode" IsChecked="{Binding Path=ModeArray[2], Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}"  Padding="6" Content="2"/>
                    <RadioButton GroupName="Mode" IsChecked="{Binding Path=ModeArray[3], Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}"  Padding="6" Content="3"/>
                    <RadioButton GroupName="Mode" IsChecked="{Binding Path=ModeArray[4], Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}"  Padding="6" Content="4"/>
                </WrapPanel>

            </DockPanel>


            <!--<DockPanel Margin="0,0,0,25" >
                <Label Margin="0,0,0,6
                       " FontSize="13" DockPanel.Dock="Top" Content="Number of players:" HorizontalAlignment="Center"></Label>
                <WrapPanel Margin="5,0,0,0" DockPanel.Dock="Right"  HorizontalAlignment="Center">
                    <RadioButton x:Name="fisvePlayers" Padding="6" Style="{StaticResource {x:Type ToggleButton}}">5</RadioButton>
                    <RadioButton 
                    x:Name="fourPalayers"
                    IsChecked="True" Padding="6" Style="{StaticResource {x:Type ToggleButton}}">
                        4</RadioButton>
                    <RadioButton x:Name="threePflayers" Padding="6" Style="{StaticResource {x:Type ToggleButton}}">3</RadioButton>
                    <RadioButton x:Name="twoPslayers" Padding="6" Style="{StaticResource {x:Type ToggleButton}}">2</RadioButton>
                </WrapPanel>
            </DockPanel>-->

            <!--Make it private checkbox-->
            <CheckBox Margin="0,0,0,10" IsChecked="{Binding IsPrivate, Mode=TwoWay}"
                Content="Make it private"
                Name="PasswordCheckbox"
                      FontSize="13"
                      Background="{StaticResource thisBackgroundColor}">
            </CheckBox>

            <Border
                                                Name="PasswordBorder"
                                        Visibility="{Binding ElementName=PasswordCheckbox, Path=IsChecked, Converter={StaticResource BoolToVis}}" 


                BorderBrush="{StaticResource InputFormColor}"
            BorderThickness="0 0 0 1"
            Margin="0,0,0,25"
            >
                <Grid Margin="5,0,0,3">
                    <PasswordBox Style="{StaticResource passwordStyle}" x:Name="PasswordTextBox"  FontSize="16" 
                                 Foreground="Black"  BorderThickness="0"  
                                 Background="{StaticResource thisBackgroundColor}" Width="Auto"  >


                    </PasswordBox>
                    <TextBlock FontSize="16" Foreground="{StaticResource InputFormColor}" IsHitTestVisible="False" Text="Password">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=PasswordTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>

                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
            <Border
                                Name="ConfirmPasswordBorder"
                        Visibility="{Binding ElementName=PasswordCheckbox, Path=IsChecked, Converter={StaticResource BoolToVis}}" 


            BorderBrush="{StaticResource InputFormColor}"
            BorderThickness="0 0 0 1"
            Margin="0,0,0,10"
            >
                <Grid Margin="5,0,0,3">
                    <PasswordBox   Style="{StaticResource passwordStyle}" x:Name="ConfirmPasswordTextBox"  FontSize="16" 
                                 Foreground="Black"  BorderThickness="0"  
                                 Background="{StaticResource thisBackgroundColor}" Width="Auto"  >

                    </PasswordBox>
                    <TextBlock FontSize="16" Foreground="{StaticResource InputFormColor}" IsHitTestVisible="False" Text="sdsdsd password">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=ConfirmPasswordTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>

                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

            </Border>
        </StackPanel>

    </DockPanel>

</Window>