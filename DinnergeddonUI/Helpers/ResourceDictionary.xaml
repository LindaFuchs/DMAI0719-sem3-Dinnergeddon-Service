<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:vm ="clr-namespace:DinnergeddonUI.ViewModels"
                    xmlns:helpers ="clr-namespace:DinnergeddonUI.Helpers"
                    xmlns:v="clr-namespace:DinnergeddonUI.Views"
                    xmlns:local="clr-namespace:DinnergeddonUI.Helpers">

    <SolidColorBrush x:Key="InputFormColor">#858585</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonColor">#703913</SolidColorBrush>
    <SolidColorBrush x:Key="PressedButtonColor">#9C5C31</SolidColorBrush>
    <SolidColorBrush x:Key="IncorrectColor">#B41B1B</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundColor">#1F1208</SolidColorBrush>
    <SolidColorBrush x:Key="DinnerGeddonColor">#703913</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundColorSecondary">#56452D</SolidColorBrush>
    <SolidColorBrush x:Key="SidePanelColor">#120902</SolidColorBrush>

    <DataTemplate DataType="{x:Type vm:InputPasswordViewModel}">
        <v:InputPasswordDialog></v:InputPasswordDialog>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:LoginViewModel}">
        <v:Login></v:Login>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:LobbiesViewModel}"
>
        <v:Lobbies></v:Lobbies>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:HighscoresViewModel}">
        <v:Highscores></v:Highscores>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:LobbyViewModel}"
                  >
        <v:Lobby></v:Lobby>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:CreateLobbyViewModel}">
        <v:CreateLobbyDialog></v:CreateLobbyDialog>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ProfileViewModel}">
        <v:Profile></v:Profile>
    </DataTemplate>

    <Style x:Key="RoundButtonTemplate" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ButtonColor}"></Setter>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="6" Background="{TemplateBinding Background}" BorderThickness="0" Padding="13,10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PressedButtonColor}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="20"></Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="ButtonWithHoover">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource SidePanelColor}"/>
        <Setter Property="Foreground" Value="White"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="40,8" BorderBrush="Gray" BorderThickness="0,0,0.25,0" >
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                    
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <!--<Setter Property="Padding" Value="40,8"></Setter>-->

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedButtonColor}"/>
            </Trigger>
        </Style.Triggers>       

    </Style>
    
    <Style x:Key="passwordStyle"
               
        TargetType="{x:Type PasswordBox}">
        <Setter Property="helpers:PasswordBoxMonitor.IsMonitoring"
              Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    SnapsToDevicePixels="true">
                        <Grid>
                            <TextBlock Text="Password" 
                           Opacity="0.6"
                           Foreground="{StaticResource InputFormColor}" 
                           Visibility="Collapsed"
                           Name="txtPrompt" />
                            <ScrollViewer x:Name="PART_ContentHost"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                         Value="false">
                            <Setter TargetName="Bd"
                                            Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="helpers:PasswordBoxMonitor.PasswordLength" Value="0">
                            <Setter Property="Visibility" TargetName="txtPrompt" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <helpers:CustomConverter x:Key="CustomConverter"></helpers:CustomConverter>
</ResourceDictionary>